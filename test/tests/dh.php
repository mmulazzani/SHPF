<?php

include ('../../SHPF/Features/SecureSession/Crypt/DiffieHellman.php');

function get_execution_time()
{
	static $microtime_start = null;
	if($microtime_start === null)
	{
		$microtime_start = microtime(true);
		return 0.0;
	}
	return microtime(true) - $microtime_start;
}



$prime = '179769313486231590770839156793787453197860296048756011706444423684197180216158519368947833795864925541502180565485980503646440548199239100050792877003355816639229553136239076508735759914822574862575007425302077447712589550957937778424442426617334727629299387668709205606050270810842907692932019128194467627007';
$primeBits = 1024;
/*
$prime = '2410312426921032588552076022197566074856950548502459942654116941958108831682612228890093858261341614673227141477904012196503648957050582631942730706805009223062734745341073406696246014589361659774041027169249453200378729434170325843778659198143763193776859869524088940195577346119843545301547043747207749969763750084308926339295559968882457872412993810129130294592999947926365264059284647209730384947211681434464714438488520940127459844288859336526896320919633919';
$primeBits = 1536;

$prime = '32317006071311007300338913926423828248817941241140239112842009751400741706634354222619689417363569347117901737909704191754605873209195028853758986185622153212175412514901774520270235796078236248884246189477587641105928646099411723245426622522193230540919037680524235519125679715870117001058055877651038861847280257976054903569732561526167081339361799541336476559160368317896729073178384589680639671900977202194168647225871031411336429319536193471636533209717077448227988588565369208645296636077250268955505928362751121174096972998068410554359584866583291642136218231078990999448652468262416972035911852507045361090559';
$primeBits = 2048;


$prime = '5809605995369958062791915965639201402176612226902900533702900882779736177890990861472094774477339581147373410185646378328043729800750470098210924487866935059164371588168047540943981644516632755067501626434556398193186628990071248660819361205119793693985433297036118232914410171876807536457391277857011849897410207519105333355801121109356897459426271845471397952675959440793493071628394122780510124618488232602464649876850458861245784240929258426287699705312584509625419513463605155428017165714465363094021609290561084025893662561222573202082865797821865270991145082200656978177192827024538990239969175546190770645685893438011714430426409338676314743571154537142031573004276428701433036381801705308659830751190352946025482059931306571004727362479688415574702596946457770284148435989129632853918392117997472632693078113129886487399347796982772784615865232621289656944284216824611318709764535152507354116344703769998514148343807';
$primeBits = 3072;

$prime = '1044388881413152506679602719846529545831269060992135009022588756444338172022322690710444046669809783930111585737890362691860127079270495454517218673016928427459146001866885779762982229321192368303346235204368051010309155674155697460347176946394076535157284994895284821633700921811716738972451834979455897010306333468590751358365138782250372269117968985194322444535687415522007151638638141456178420621277822674995027990278673458629544391736919766299005511505446177668154446234882665961680796576903199116089347634947187778906528008004756692571666922964122566174582776707332452371001272163776841229318324903125740713574141005124561965913888899753461735347970011693256316751660678950830027510255804846105583465055446615090444309583050775808509297040039680057435342253926566240898195863631588888936364129920059308455669454034010391478238784189888594672336242763795138176353222845524644040094258962433613354036104643881925238489224010194193088911666165584229424668165441688927790460608264864204237717002054744337988941974661214699689706521543006262604535890998125752275942608772174376107314217749233048217904944409836238235772306749874396760463376480215133461333478395682746608242585133953883882226786118030184028136755970045385534758453247';
$primeBits = 4096;
*/

$prime = '5809605995369958062791915965639201402176612226902900533702900882779736177890990861472094774477339581147373410185646378328043729800750470098210924487866935059164371588168047540943981644516632755067501626434556398193186628990071248660819361205119793693985433297036118232914410171876807536457391277857011849897410207519105333355801121109356897459426271845471397952675959440793493071628394122780510124618488232602464649876850458861245784240929258426287699705312584509625419513463605155428017165714465363094021609290561084025893662561222573202082865797821865270991145082200656978177192827024538990239969175546190770645685893438011714430426409338676314743571154537142031573004276428701433036381801705308659830751190352946025482059931306571004727362479688415574702596946457770284148435989129632853918392117997472632693078113129886487399347796982772784615865232621289656944284216824611318709764535152507354116344703769998514148343807';
$primeBits = 3072;

//-----------------------------------------
// AJAX
//-----------------------------------------


if ($_GET['public_b'])
{
	get_execution_time();
	$dh = new \Crypt_DiffieHellman ($prime, 2, $_GET['public_a']);
	$dh->computeSecretKey ($_GET['public_b']);
	$key = $dh->getSharedSecretKey ();
	$totaltime = get_execution_time();
	echo $totaltime;
	//echo $key;
	exit;
}

//-----------------------------------------
// Run Diffie Hellman
// Generate own secret
//-----------------------------------------

get_execution_time();


//$private = '1179757608810809878495911474886994154518533135482206510172168203020169568594302002872444713096931934892648814759256324516344269277959067385540248720312623306655820255346435317070896484457608467376882787966235409580991698231716720216176439817042315708475947246131996019053518039218968017002570090698172099950398829234877484722907624162825311682899571960292348052999957189696805338221999355465063999014702794973631784273439226394138420052010880314633907607707186800730649692818338704768760102367795963290623199668198857632891126682618207538858784642003857227572609427670013716060493637763397941763920069553990606173617534820157127162052138116329507133034458945720097416810896982964366604723469312573759316755468162927974817289862256301255438387';

$dh = new \Crypt_DiffieHellman ($prime, 2);
$dh->generateKeys();
$private = $dh->getPrivateKey();
$public = $dh->getPublicKey();

//-----------------------------------------
// Generate Javascript
//-----------------------------------------






$totaltime = get_execution_time();


$secretLength = $primeBits - 1;
$generator = 2;

//echo $totaltime ;



//-----------------------------------------
// Extension name
//-----------------------------------------

if (extension_loaded('gmp'))
	$extension = 'gmp';
else if (extension_loaded('bcmath'))
	$extension = 'bcmath';
else
	$extension = 'n/a';


//-----------------------------------------
// Console
//-----------------------------------------

if ($_GET['console'])
	$console = true;
else
	$console = false;


?>


<html>
<head>
	<title>SHPF DH Calculation Test</title>
	
	<style type="text/css">
		body
		{
			font-family: Arial, Verdana, "Times New Roman";
			font-size: 0.9em;
		}
	</style>
</head>
<body>

	<h1>SHPF DH Calculation Test</h1>
	
	<p>Using PHP extension: <?php echo $extension; ?></p>
	
	<p>Use console timer (some browsers may not support this): <?php echo $console ? 'on' : 'off'; ?> <a href="dh.php?console=<?php echo $console ? 0 : 1; ?>">[toggle]</a></p>
	
	<p>Prime Length: <?php echo $primeBits; ?> bits</p>
	
	<p>Server Public+Private Key Generation: <?php echo $totaltime; ?> seconds</p>
	<p>Server Shared Key Calculation: <span id="server_shared_calc">Waiting for client ...</span></p>
	<p>Server Total: <span id="server_total">...</span> seconds</p>
	<p>Client Public+Private Key Generation + Shared Key Calculation: <span id="client_calc"></span> (for more precision see browser console [if supported])</p>
	
	<span id="shared"></span>


<script src="../../SHPF/Features/SecureSession/js/date.js" type="text/javascript"></script>
<script src="../../SHPF/Features/SecureSession/js/bigint.js" type="text/javascript"></script>
<script src="../../SHPF/Features/SecureSession/js/sha1.js" type="text/javascript"></script>
<script src="../../SHPF/Output/js/mootools-core-1.4.5.js" type="text/javascript"></script>
<!-- <script src="../../SHPF/Features/SecureSession/js/date.js" type="text/javascript"></script>
<script src="../../SHPF/Features/SecureSession/js/hmac.js" type="text/javascript"></script>
<script src="../../SHPF/Features/SecureSession/js/parseuri.js" type="text/javascript"></script>
<script src="../../SHPF/Features/SecureSession/js/locksession.js" type="text/javascript"></script> -->
<script type="text/javascript">

//var start = new Date().getTime();
var start, end;
start = new Date().getTime();

<?php if ($console) { ?>
if (console != null && console.time != null)
	console.time('DH');
<?php } ?>


var secret =  randBigInt (<?php echo $secretLength; ?>, 1);
var prime = str2bigInt ('<?php echo $prime; ?>', 10, 0);
var generator = str2bigInt ('<?php echo $generator; ?>', 10, 0);
var their_public = str2bigInt ('<?php echo $public; ?>', 10, 0);
var my_public = powMod (generator, secret, prime);
var shared = bigInt2str (powMod (their_public, secret, prime), 10);
var my_public_str = bigInt2str (my_public, 10);

<?php if ($console) { ?>
if (console != null && console.time != null)
	console.timeEnd('DH');
<?php } ?>

end = new Date().getTime();



//alert(my_public_str);


$('client_calc').innerHTML = ((end-start) / 1000) + " seconds";

//$('shared').innerHTML += shared + "<br>";


var serverTime1 = <?php echo $totaltime; ?>;


var request = new Request ({ url: 'dh.php?public_a=<?php echo $private; ?>&public_b=' + my_public_str, 
		onSuccess: function (response)
		{
			$('server_shared_calc').innerHTML = response + ' seconds';
			
			$('server_total').innerHTML = serverTime1 + parseFloat(response);


			//$('shared').innerHTML += response ;
		}
}).send();



//var hash = CryptoJS.SHA1('<?php echo $prime; ?>');

//var o = hash.toString(CryptoJS.enc.Hex);

//document.write (o);
/*var end = new Date().getTime();
var elapsed = end - start;

alert(start +"\n" + end);
document.write (elapsed);
*/

</script>

</body>
</html>